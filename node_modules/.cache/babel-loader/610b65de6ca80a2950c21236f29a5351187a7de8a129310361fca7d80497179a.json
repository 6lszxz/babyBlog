{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(\" 常见问题 \"), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, question => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      key: question\n    }, [_createElementVNode(\"li\", null, _toDisplayString(question), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;sFAEE,uBAMM,iCALJA,oBAIKC,6BAJkBC,eAAS,EAArBC,QAAQ;yBAAnBH,oBAIK;MAJ8BI,GAAG,EAAED;IAAQ,IAC9CE,oBAEK,6BADDF,QAAQ","names":["_createElementBlock","_Fragment","$data","question","key","_createElementVNode"],"sourceRoot":"","sources":["E:\\Programs\\learnvue\\src\\pages\\helpCenter.vue"],"sourcesContent":["<template>\r\n常见问题\r\n  <div>\r\n    <ul v-for=\"question of questions\" :key=\"question\">\r\n      <li>\r\n        {{question}}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"helpCenter\",\r\n  data(){\r\n    return{\r\n      questions:[],\r\n      error: true,\r\n    }\r\n  },\r\n  methods:{\r\n    async getHelp(){\r\n      try{\r\n        axios.get('/server/questions.json',)\r\n            .then((response)=>{\r\n              this.questions = response.data;\r\n            })\r\n            .then(()=>{\r\n              this.error=false;\r\n            })\r\n            .catch((e)=>{\r\n              throw e;\r\n            })\r\n      }catch (e){\r\n        console.log(e);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getHelp();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}